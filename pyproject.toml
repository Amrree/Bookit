[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nonfiction-book-writer"
version = "1.0.0"
description = "A production-capable non-fiction book-writing system with RAG, multi-agent orchestration, and MCP-style tooling"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "AI Assistant", email = "assistant@example.com"},
]
keywords = ["ai", "book-writing", "rag", "multi-agent", "nlp", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Markup",
    "Topic :: Office/Business :: Office Suites",
]

dependencies = [
    "pydantic>=2.0.0",
    "PyPDF2>=3.0.0",
    "python-docx>=0.8.11",
    "python-epub>=0.5.0",
    "pypandoc>=1.11",
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "openai>=1.0.0",
    "requests>=2.28.0",
    "click>=8.0.0",
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "pandas>=2.0.0",
    "markdown>=3.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
book-writer = "run:main"
book-writer-cli = "cli:cli"
book-writer-gui = "gui:main"

[project.urls]
Homepage = "https://github.com/example/nonfiction-book-writer"
Documentation = "https://github.com/example/nonfiction-book-writer#readme"
Repository = "https://github.com/example/nonfiction-book-writer.git"
Issues = "https://github.com/example/nonfiction-book-writer/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]