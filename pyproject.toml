[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "book-writing-system"
version = "1.0.0"
description = "AI-powered non-fiction book writing system with multi-agent architecture"
readme = "docs/README.md"
license = {text = "MIT"}
authors = [
    {name = "Book Writing System Team", email = "team@bookwritingsystem.com"}
]
maintainers = [
    {name = "Book Writing System Team", email = "team@bookwritingsystem.com"}
]
keywords = [
    "ai", "book-writing", "llm", "rag", "multi-agent", "writing", "publishing"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Markup",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
]
requires-python = ">=3.8"
dependencies = [
    # Core dependencies
    "pydantic>=2.0.0",
    "asyncio-mqtt>=0.11.0",
    "aiofiles>=23.0.0",
    "aiohttp>=3.8.0",
    "httpx>=0.24.0",
    
    # LLM clients
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "requests>=2.28.0",
    
    # Memory and RAG
    "chromadb>=0.4.0",
    "sentence-transformers>=2.2.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    
    # Document processing
    "PyPDF2>=3.0.0",
    "python-docx>=0.8.11",
    "pypandoc>=1.11",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    
    # CLI and GUI
    "click>=8.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pick>=2.0.0",
    
    # Export formats
    "fpdf>=2.5.0",
    "markdown>=3.4.0",
    "weasyprint>=59.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.0.0",
    "tenacity>=8.2.0",
    "tqdm>=4.65.0",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
gui = [
    "PyQt6>=6.4.0",
    "PyQt6-Qt6>=6.4.0",
    "PyQt6-sip>=13.4.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
    "sphinx-autodoc-typehints>=1.23.0",
]
all = [
    "book-writing-system[gui,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/your-username/book-writing-system"
Documentation = "https://book-writing-system.readthedocs.io"
Repository = "https://github.com/your-username/book-writing-system.git"
Issues = "https://github.com/your-username/book-writing-system/issues"
Changelog = "https://github.com/your-username/book-writing-system/blob/main/CHANGELOG.md"

[project.scripts]
book-writing-system = "run:main"
bws = "run:main"
book-cli = "cli.cli:main"
book-gui = "gui.gui:main"

[tool.setuptools.packages.find]
where = ["."]
include = [
    "agents*",
    "memory_manager*",
    "llm_client*",
    "tool_manager*",
    "document_ingestor*",
    "book_builder*",
    "full_book_generator*",
    "cli*",
    "gui*",
    "tests*",
]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agents", "memory_manager", "llm_client", "tool_manager", "document_ingestor", "book_builder", "full_book_generator", "cli", "gui", "tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "chromadb.*",
    "sentence_transformers.*",
    "PyPDF2.*",
    "docx.*",
    "pypandoc.*",
    "fpdf.*",
    "weasyprint.*",
    "PyQt6.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gui: marks tests as GUI tests",
    "cli: marks tests as CLI tests",
]

[tool.coverage.run]
source = ["agents", "memory_manager", "llm_client", "tool_manager", "document_ingestor", "book_builder", "full_book_generator", "cli", "gui"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]